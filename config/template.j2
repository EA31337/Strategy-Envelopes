/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_Envelopes_Params_{{ Timeframe }} : EnvelopesParams {
  Indi_Envelopes_Params_{{ Timeframe }}() : EnvelopesParams(indi_env_defaults, PERIOD_{{ Timeframe }}) {
    applied_price = (ENUM_APPLIED_PRICE){{ Envelopes_Indi_Envelopes_Applied_Price | default(0) }};
    deviation = {{ Envelopes_Indi_Envelopes_Deviation | default(0) }};
    ma_method = (ENUM_MA_METHOD){{ Envelopes_Indi_Envelopes_MA_Method | default(0) }};
    ma_period = {{ Envelopes_Indi_Envelopes_MA_Period | default(0) }};
    ma_shift = {{ Envelopes_Indi_Envelopes_MA_Shift | default(0) }};
    shift = {{ Envelopes_Indi_Envelopes_Shift | default(0) }};
  }
} indi_env_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_Envelopes_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_Envelopes_Params_{{ Timeframe }}() : StgParams(stg_env_defaults) {
    lot_size = {{ Envelopes_LotSize | default(0) }};
    signal_open_method = {{ Envelopes_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ Envelopes_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ Envelopes_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ Envelopes_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ Envelopes_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ Envelopes_SignalCloseLevel | default(0) }};
    price_stop_method = {{ Envelopes_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ Envelopes_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ Envelopes_TickFilterMethod  | default(1) }};
    max_spread = {{ Envelopes_MaxSpread | default(0) }};
  }
} stg_env_{{ Timeframe | lower }};
